# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Xero.Model.Overpayment do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :Type,
    :Contact,
    :Date,
    :Status,
    :LineAmountTypes,
    :LineItems,
    :SubTotal,
    :TotalTax,
    :Total,
    :UpdatedDateUTC,
    :CurrencyCode,
    :OverpaymentID,
    :CurrencyRate,
    :RemainingCredit,
    :Allocations,
    :AppliedAmount,
    :Payments,
    :HasAttachments,
    :Attachments
  ]

  @type t :: %__MODULE__{
          :Type => String.t() | nil,
          :Contact => Xero.Model.Contact.t() | nil,
          :Date => String.t() | nil,
          :Status => String.t() | nil,
          :LineAmountTypes => Xero.Model.LineAmountTypes.t() | nil,
          :LineItems => [Xero.Model.LineItem.t()] | nil,
          :SubTotal => float() | nil,
          :TotalTax => float() | nil,
          :Total => float() | nil,
          :UpdatedDateUTC => String.t() | nil,
          :CurrencyCode => Xero.Model.CurrencyCode.t() | nil,
          :OverpaymentID => String.t() | nil,
          :CurrencyRate => float() | nil,
          :RemainingCredit => float() | nil,
          :Allocations => [Xero.Model.Allocation.t()] | nil,
          :AppliedAmount => float() | nil,
          :Payments => [Xero.Model.Payment.t()] | nil,
          :HasAttachments => boolean() | nil,
          :Attachments => [Xero.Model.Attachment.t()] | nil
        }
end

defimpl Poison.Decoder, for: Xero.Model.Overpayment do
  import Xero.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:Contact, :struct, Xero.Model.Contact, options)
    |> deserialize(:LineAmountTypes, :struct, Xero.Model.LineAmountTypes, options)
    |> deserialize(:LineItems, :list, Xero.Model.LineItem, options)
    |> deserialize(:CurrencyCode, :struct, Xero.Model.CurrencyCode, options)
    |> deserialize(:Allocations, :list, Xero.Model.Allocation, options)
    |> deserialize(:Payments, :list, Xero.Model.Payment, options)
    |> deserialize(:Attachments, :list, Xero.Model.Attachment, options)
  end
end
