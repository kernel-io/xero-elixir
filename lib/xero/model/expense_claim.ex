# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Xero.Model.ExpenseClaim do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :ExpenseClaimID,
    :Status,
    :Payments,
    :User,
    :Receipts,
    :UpdatedDateUTC,
    :Total,
    :AmountDue,
    :AmountPaid,
    :PaymentDueDate,
    :ReportingDate,
    :ReceiptID
  ]

  @type t :: %__MODULE__{
          :ExpenseClaimID => String.t() | nil,
          :Status => String.t() | nil,
          :Payments => [Xero.Model.Payment.t()] | nil,
          :User => Xero.Model.User.t() | nil,
          :Receipts => [Xero.Model.Receipt.t()] | nil,
          :UpdatedDateUTC => String.t() | nil,
          :Total => float() | nil,
          :AmountDue => float() | nil,
          :AmountPaid => float() | nil,
          :PaymentDueDate => String.t() | nil,
          :ReportingDate => String.t() | nil,
          :ReceiptID => String.t() | nil
        }
end

defimpl Poison.Decoder, for: Xero.Model.ExpenseClaim do
  import Xero.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:Payments, :list, Xero.Model.Payment, options)
    |> deserialize(:User, :struct, Xero.Model.User, options)
    |> deserialize(:Receipts, :list, Xero.Model.Receipt, options)
  end
end
