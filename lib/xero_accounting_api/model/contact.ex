# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.Contact do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"ContactID",
    :"ContactNumber",
    :"AccountNumber",
    :"ContactStatus",
    :"Name",
    :"FirstName",
    :"LastName",
    :"EmailAddress",
    :"SkypeUserName",
    :"ContactPersons",
    :"BankAccountDetails",
    :"TaxNumber",
    :"AccountsReceivableTaxType",
    :"AccountsPayableTaxType",
    :"Addresses",
    :"Phones",
    :"IsSupplier",
    :"IsCustomer",
    :"DefaultCurrency",
    :"XeroNetworkKey",
    :"SalesDefaultAccountCode",
    :"PurchasesDefaultAccountCode",
    :"SalesTrackingCategories",
    :"PurchasesTrackingCategories",
    :"TrackingCategoryName",
    :"TrackingCategoryOption",
    :"PaymentTerms",
    :"UpdatedDateUTC",
    :"ContactGroups",
    :"Website",
    :"BrandingTheme",
    :"BatchPayments",
    :"Discount",
    :"Balances",
    :"Attachments",
    :"HasAttachments",
    :"ValidationErrors",
    :"HasValidationErrors",
    :"StatusAttributeString"
  ]

  @type t :: %__MODULE__{
    :"ContactID" => String.t | nil,
    :"ContactNumber" => String.t | nil,
    :"AccountNumber" => String.t | nil,
    :"ContactStatus" => String.t | nil,
    :"Name" => String.t | nil,
    :"FirstName" => String.t | nil,
    :"LastName" => String.t | nil,
    :"EmailAddress" => String.t | nil,
    :"SkypeUserName" => String.t | nil,
    :"ContactPersons" => [XeroAccountingAPI.Model.ContactPerson.t] | nil,
    :"BankAccountDetails" => String.t | nil,
    :"TaxNumber" => String.t | nil,
    :"AccountsReceivableTaxType" => String.t | nil,
    :"AccountsPayableTaxType" => String.t | nil,
    :"Addresses" => [XeroAccountingAPI.Model.Address.t] | nil,
    :"Phones" => [XeroAccountingAPI.Model.Phone.t] | nil,
    :"IsSupplier" => boolean() | nil,
    :"IsCustomer" => boolean() | nil,
    :"DefaultCurrency" => XeroAccountingAPI.Model.CurrencyCode.t | nil,
    :"XeroNetworkKey" => String.t | nil,
    :"SalesDefaultAccountCode" => String.t | nil,
    :"PurchasesDefaultAccountCode" => String.t | nil,
    :"SalesTrackingCategories" => [XeroAccountingAPI.Model.SalesTrackingCategory.t] | nil,
    :"PurchasesTrackingCategories" => [XeroAccountingAPI.Model.SalesTrackingCategory.t] | nil,
    :"TrackingCategoryName" => String.t | nil,
    :"TrackingCategoryOption" => String.t | nil,
    :"PaymentTerms" => XeroAccountingAPI.Model.PaymentTerm.t | nil,
    :"UpdatedDateUTC" => String.t | nil,
    :"ContactGroups" => [XeroAccountingAPI.Model.ContactGroup.t] | nil,
    :"Website" => String.t | nil,
    :"BrandingTheme" => XeroAccountingAPI.Model.BrandingTheme.t | nil,
    :"BatchPayments" => XeroAccountingAPI.Model.BatchPaymentDetails.t | nil,
    :"Discount" => float() | nil,
    :"Balances" => XeroAccountingAPI.Model.Balances.t | nil,
    :"Attachments" => [XeroAccountingAPI.Model.Attachment.t] | nil,
    :"HasAttachments" => boolean() | nil,
    :"ValidationErrors" => [XeroAccountingAPI.Model.ValidationError.t] | nil,
    :"HasValidationErrors" => boolean() | nil,
    :"StatusAttributeString" => String.t | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.Contact do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"ContactPersons", :list, XeroAccountingAPI.Model.ContactPerson, options)
    |> deserialize(:"Addresses", :list, XeroAccountingAPI.Model.Address, options)
    |> deserialize(:"Phones", :list, XeroAccountingAPI.Model.Phone, options)
    |> deserialize(:"DefaultCurrency", :struct, XeroAccountingAPI.Model.CurrencyCode, options)
    |> deserialize(:"SalesTrackingCategories", :list, XeroAccountingAPI.Model.SalesTrackingCategory, options)
    |> deserialize(:"PurchasesTrackingCategories", :list, XeroAccountingAPI.Model.SalesTrackingCategory, options)
    |> deserialize(:"PaymentTerms", :struct, XeroAccountingAPI.Model.PaymentTerm, options)
    |> deserialize(:"ContactGroups", :list, XeroAccountingAPI.Model.ContactGroup, options)
    |> deserialize(:"BrandingTheme", :struct, XeroAccountingAPI.Model.BrandingTheme, options)
    |> deserialize(:"BatchPayments", :struct, XeroAccountingAPI.Model.BatchPaymentDetails, options)
    |> deserialize(:"Balances", :struct, XeroAccountingAPI.Model.Balances, options)
    |> deserialize(:"Attachments", :list, XeroAccountingAPI.Model.Attachment, options)
    |> deserialize(:"ValidationErrors", :list, XeroAccountingAPI.Model.ValidationError, options)
  end
end

