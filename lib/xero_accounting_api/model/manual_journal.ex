# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.ManualJournal do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"Narration",
    :"JournalLines",
    :"Date",
    :"LineAmountTypes",
    :"Status",
    :"Url",
    :"ShowOnCashBasisReports",
    :"HasAttachments",
    :"UpdatedDateUTC",
    :"ManualJournalID",
    :"StatusAttributeString",
    :"Warnings",
    :"ValidationErrors",
    :"Attachments"
  ]

  @type t :: %__MODULE__{
    :"Narration" => String.t,
    :"JournalLines" => [XeroAccountingAPI.Model.ManualJournalLine.t] | nil,
    :"Date" => String.t | nil,
    :"LineAmountTypes" => XeroAccountingAPI.Model.LineAmountTypes.t | nil,
    :"Status" => String.t | nil,
    :"Url" => String.t | nil,
    :"ShowOnCashBasisReports" => boolean() | nil,
    :"HasAttachments" => boolean() | nil,
    :"UpdatedDateUTC" => String.t | nil,
    :"ManualJournalID" => String.t | nil,
    :"StatusAttributeString" => String.t | nil,
    :"Warnings" => [XeroAccountingAPI.Model.ValidationError.t] | nil,
    :"ValidationErrors" => [XeroAccountingAPI.Model.ValidationError.t] | nil,
    :"Attachments" => [XeroAccountingAPI.Model.Attachment.t] | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.ManualJournal do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"JournalLines", :list, XeroAccountingAPI.Model.ManualJournalLine, options)
    |> deserialize(:"LineAmountTypes", :struct, XeroAccountingAPI.Model.LineAmountTypes, options)
    |> deserialize(:"Warnings", :list, XeroAccountingAPI.Model.ValidationError, options)
    |> deserialize(:"ValidationErrors", :list, XeroAccountingAPI.Model.ValidationError, options)
    |> deserialize(:"Attachments", :list, XeroAccountingAPI.Model.Attachment, options)
  end
end

