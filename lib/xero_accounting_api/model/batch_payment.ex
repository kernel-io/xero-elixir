# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.BatchPayment do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"Account",
    :"Reference",
    :"Particulars",
    :"Code",
    :"Details",
    :"Narrative",
    :"BatchPaymentID",
    :"DateString",
    :"Date",
    :"Amount",
    :"Payments",
    :"Type",
    :"Status",
    :"TotalAmount",
    :"UpdatedDateUTC",
    :"IsReconciled",
    :"ValidationErrors"
  ]

  @type t :: %__MODULE__{
    :"Account" => XeroAccountingAPI.Model.Account.t | nil,
    :"Reference" => String.t | nil,
    :"Particulars" => String.t | nil,
    :"Code" => String.t | nil,
    :"Details" => String.t | nil,
    :"Narrative" => String.t | nil,
    :"BatchPaymentID" => String.t | nil,
    :"DateString" => String.t | nil,
    :"Date" => String.t | nil,
    :"Amount" => float() | nil,
    :"Payments" => [XeroAccountingAPI.Model.Payment.t] | nil,
    :"Type" => String.t | nil,
    :"Status" => String.t | nil,
    :"TotalAmount" => String.t | nil,
    :"UpdatedDateUTC" => String.t | nil,
    :"IsReconciled" => String.t | nil,
    :"ValidationErrors" => [XeroAccountingAPI.Model.ValidationError.t] | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.BatchPayment do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"Account", :struct, XeroAccountingAPI.Model.Account, options)
    |> deserialize(:"Payments", :list, XeroAccountingAPI.Model.Payment, options)
    |> deserialize(:"ValidationErrors", :list, XeroAccountingAPI.Model.ValidationError, options)
  end
end

