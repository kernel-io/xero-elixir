# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.BankTransfer do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"FromBankAccount",
    :"ToBankAccount",
    :"Amount",
    :"Date",
    :"BankTransferID",
    :"CurrencyRate",
    :"FromBankTransactionID",
    :"ToBankTransactionID",
    :"FromIsReconciled",
    :"ToIsReconciled",
    :"Reference",
    :"HasAttachments",
    :"CreatedDateUTC",
    :"ValidationErrors"
  ]

  @type t :: %__MODULE__{
    :"FromBankAccount" => XeroAccountingAPI.Model.Account.t,
    :"ToBankAccount" => XeroAccountingAPI.Model.Account.t,
    :"Amount" => float(),
    :"Date" => String.t | nil,
    :"BankTransferID" => String.t | nil,
    :"CurrencyRate" => float() | nil,
    :"FromBankTransactionID" => String.t | nil,
    :"ToBankTransactionID" => String.t | nil,
    :"FromIsReconciled" => boolean() | nil,
    :"ToIsReconciled" => boolean() | nil,
    :"Reference" => String.t | nil,
    :"HasAttachments" => boolean() | nil,
    :"CreatedDateUTC" => String.t | nil,
    :"ValidationErrors" => [XeroAccountingAPI.Model.ValidationError.t] | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.BankTransfer do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"FromBankAccount", :struct, XeroAccountingAPI.Model.Account, options)
    |> deserialize(:"ToBankAccount", :struct, XeroAccountingAPI.Model.Account, options)
    |> deserialize(:"ValidationErrors", :list, XeroAccountingAPI.Model.ValidationError, options)
  end
end

