# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.Prepayment do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"Type",
    :"Contact",
    :"Date",
    :"Status",
    :"LineAmountTypes",
    :"LineItems",
    :"SubTotal",
    :"TotalTax",
    :"Total",
    :"Reference",
    :"UpdatedDateUTC",
    :"CurrencyCode",
    :"PrepaymentID",
    :"CurrencyRate",
    :"RemainingCredit",
    :"Allocations",
    :"Payments",
    :"AppliedAmount",
    :"HasAttachments",
    :"Attachments"
  ]

  @type t :: %__MODULE__{
    :"Type" => String.t | nil,
    :"Contact" => XeroAccountingAPI.Model.Contact.t | nil,
    :"Date" => String.t | nil,
    :"Status" => String.t | nil,
    :"LineAmountTypes" => XeroAccountingAPI.Model.LineAmountTypes.t | nil,
    :"LineItems" => [XeroAccountingAPI.Model.LineItem.t] | nil,
    :"SubTotal" => float() | nil,
    :"TotalTax" => float() | nil,
    :"Total" => float() | nil,
    :"Reference" => String.t | nil,
    :"UpdatedDateUTC" => String.t | nil,
    :"CurrencyCode" => XeroAccountingAPI.Model.CurrencyCode.t | nil,
    :"PrepaymentID" => String.t | nil,
    :"CurrencyRate" => float() | nil,
    :"RemainingCredit" => float() | nil,
    :"Allocations" => [XeroAccountingAPI.Model.Allocation.t] | nil,
    :"Payments" => [XeroAccountingAPI.Model.Payment.t] | nil,
    :"AppliedAmount" => float() | nil,
    :"HasAttachments" => boolean() | nil,
    :"Attachments" => [XeroAccountingAPI.Model.Attachment.t] | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.Prepayment do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"Contact", :struct, XeroAccountingAPI.Model.Contact, options)
    |> deserialize(:"LineAmountTypes", :struct, XeroAccountingAPI.Model.LineAmountTypes, options)
    |> deserialize(:"LineItems", :list, XeroAccountingAPI.Model.LineItem, options)
    |> deserialize(:"CurrencyCode", :struct, XeroAccountingAPI.Model.CurrencyCode, options)
    |> deserialize(:"Allocations", :list, XeroAccountingAPI.Model.Allocation, options)
    |> deserialize(:"Payments", :list, XeroAccountingAPI.Model.Payment, options)
    |> deserialize(:"Attachments", :list, XeroAccountingAPI.Model.Attachment, options)
  end
end

