# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule XeroAccountingAPI.Model.ExpenseClaim do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"ExpenseClaimID",
    :"Status",
    :"Payments",
    :"User",
    :"Receipts",
    :"UpdatedDateUTC",
    :"Total",
    :"AmountDue",
    :"AmountPaid",
    :"PaymentDueDate",
    :"ReportingDate",
    :"ReceiptID"
  ]

  @type t :: %__MODULE__{
    :"ExpenseClaimID" => String.t | nil,
    :"Status" => String.t | nil,
    :"Payments" => [XeroAccountingAPI.Model.Payment.t] | nil,
    :"User" => XeroAccountingAPI.Model.User.t | nil,
    :"Receipts" => [XeroAccountingAPI.Model.Receipt.t] | nil,
    :"UpdatedDateUTC" => String.t | nil,
    :"Total" => float() | nil,
    :"AmountDue" => float() | nil,
    :"AmountPaid" => float() | nil,
    :"PaymentDueDate" => String.t | nil,
    :"ReportingDate" => String.t | nil,
    :"ReceiptID" => String.t | nil
  }
end

defimpl Poison.Decoder, for: XeroAccountingAPI.Model.ExpenseClaim do
  import XeroAccountingAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"Payments", :list, XeroAccountingAPI.Model.Payment, options)
    |> deserialize(:"User", :struct, XeroAccountingAPI.Model.User, options)
    |> deserialize(:"Receipts", :list, XeroAccountingAPI.Model.Receipt, options)
  end
end

